#!/bin/bash
#Luke Schulz


OWNER=$1; # first argument is owner of home
KEYS=${@:2}; # all the rest of arguments are key names
SECRET_KEY="FIREFIGHTER_SECRET_KEY"; #secret key always valid ? ( even after change locks?)

LASTKEY="" # Check for turning key vs inserting key
LASTPERSON="" # who is the last person to turn a key
GOODKEY=0; # 1 = yes, 0 = no
WHOSIN=""; # string/list of folks inside
WHOCOUNT=0; # count of folks inside ( for comma seperated list building)

INSERT(){
	person=$3;
	key=$4;
	echo "KEY $key INSERTED BY $person";
	LASTKEY=$key;
}
TURN(){

	person=$3;
	for i in $KEYS #check the last inserted key which is being turned against all valid keys
		do 
			if [[ $LASTKEY =~ $i  ]] || [[ $LASTKEY =~ $SECRET_KEY ]] ; then
			echo "SUCCESS $person TURNS KEY $LASTKEY";
			LASTPERSON=$person; # if the door unlucks, save the person who did that
			GOODKEY=1; # set goodkey flag for enter function
			return
			fi
	done

	echo "FAILURE $person UNABLE TO TURN KEY $LASTKEY" 
	GOODKEY=0;

}
ENTER(){
	person=$3;
	if [[ $person=$LASTPERSON && $GOODKEY -eq 1 ]] ; then #idk if we need to check the person here. if the door is unlocked its unlocked???
		echo "ACCESS ALLOWED"
		#WHOSIN=( "${WHOSIN[@]}" "${person}" ); # add new person to our "whos inside" array
		if (( WHOCOUNT >= 1));then # need condition for building comma seperated list
			WHOSIN+=",$person" #subsequent entries need a comma
		else
			WHOSIN+="$person" # test case shows single entry w/o comma
		fi

		((WHOCOUNT++)) #increment count of people.

	else 
		echo "ACCESS DENIED"
	fi
}
WHO(){	
	if [ -z "$WHOSIN" ] ; then  #check 
		echo "NOBODY HOME";
	else
		echo "$WHOSIN"
		#echo "whocount = $WHOCOUNT" # DEBUG
		# for who in $WHOSIN
		# do 
		# 	echo "$who ,"
		# done
	fi

}
CHANGELOCKS(){
	#check for owner inside , and if hes the one calling for changelocks
	if [[ $WHOSIN =~ "$OWNER" ]] && [[ "$3" == "$OWNER" ]]; then
		KEYS=${@:4}; # all the rest of arguments are key names
		echo "OK"
	else
		echo "ACCESS DENIED"
	fi
}

LEAVE(){
	person=$3
	#echo "Person is $person " # DEBUG
	if [[ $WHOSIN =~ "$person" ]]; then
		echo "OK"
		lessWho=${WHOSIN//$person/} # this leaves extra comma, im out of my depth in regex.
		WHOSIN=$( echo $lessWho | sed 's/,,/,/g' ) #() for cmd, Sed just replaces any double comma with single comma(sanitize)
		echo $WHOSIN # DEBUG
		#get them out of $WHOSIN
	else
		echo "NOT HERE"
	fi
}

#### BEGIN MAIN #######
# while true #loop foreva
# 	do
	while read INPUT; do # dont loop forever, just loop until eof
	 # get line from stdin
		case "$INPUT" in #switch on key phrases

			"INSERT KEY"*)
				INSERT $INPUT;;

			"TURN KEY"*)
				TURN $INPUT;;

			"ENTER HOUSE"*)
				ENTER $INPUT;;

			"WHO'S INSIDE?"*)
				WHO;; # input not needed, never any params

			"CHANGE LOCKS"*)
				CHANGELOCKS $INPUT;;

			"LEAVE HOUSE"*)
				LEAVE $INPUT;;
		esac

	done