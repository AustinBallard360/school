#! /bin/bash

echo "THE ARGUMENTS PASSED TO $0 INCLUDE  $1 $2 $3 $4";
for argx in "$@"; do
	if [[ $argx = "--help" || $argx = "--h" || $argx =  "-h" || $argx =  "help" ]]; then
		echo -e "\n****************\nWelcome to the help menu,\n this program takes parameters,\n and you dont need any help.\n it doesnt do anything\n dont be afraid\n\n****************";
	else
		echo "$argx";
	fi
done

if [ $1 ]; then
	newvar=$1
	echo "Using Paramater 1 as Variable-> $newvar";
 else
 	echo "Enter a variable";
 	read newvar;
 fi

echo "Congrats, you picked $newvar";

echo "how many times would you like to repeat this nonsense?";
read num; # get number from stdin
propNumRE='^[0-9]+$'; # regex for string of only digits


until [[ $num =~ $propNumRE ]]; do 
	>&2 echo "Not a number" #echo but to std error // which should be the same and stdout ?
	read num; # get new number
done

echo "Good working picking a real number, such as the one you picked, which is the following numbers -> $num"

counter=0;

while [ $counter -lt $num ]; do
	echo "printing Your Variable [ $newvar ], $counter of $num ";
	counter=$(($counter+1));
done

echo "Great work, you are done here";
echo "Unless........ shall we?";
echo "1. Yes we shall";
echo "2. we better not.";
read choice;
newcount=0;
countDivis=2

if [[ $choice = "1" ]]; then
	tower="X";
	until (( 80 < newcount)); do
		newcount=$((newcount+1));
		modulito=$((newcount % countDivis ));
		if [[ $modulito = 0 ]]; then
			#echo -e "BOY WE GOT ONE";
			tempcount=0;
			countDivis=$((countDivis+=2));
			tower="$tower /";
			echo $tower;
			((tempcount++));
		else
			tower="$tower \\";
			echo $tower;
			((tempcount++));
		fi
	done
else
	echo "whatever then peace";
fi
